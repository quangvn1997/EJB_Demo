
package service;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OrderWebService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OrderWebService {


    /**
     * 
     * @param order1
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://service/", className = "service.Remove")
    @Action(input = "http://service/OrderWebService/remove")
    public void remove(
        @WebParam(name = "order1", targetNamespace = "")
        Order1 order1);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://service/", className = "service.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://service/", className = "service.CountResponse")
    @Action(input = "http://service/OrderWebService/countRequest", output = "http://service/OrderWebService/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns service.Order1
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://service/", className = "service.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://service/", className = "service.FindResponse")
    @Action(input = "http://service/OrderWebService/findRequest", output = "http://service/OrderWebService/findResponse")
    public Order1 find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param order1
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://service/", className = "service.Create")
    @Action(input = "http://service/OrderWebService/create")
    public void create(
        @WebParam(name = "order1", targetNamespace = "")
        Order1 order1);

    /**
     * 
     * @return
     *     returns java.util.List<service.Order1>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service/", className = "service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service/", className = "service.FindAllResponse")
    @Action(input = "http://service/OrderWebService/findAllRequest", output = "http://service/OrderWebService/findAllResponse")
    public List<Order1> findAll();

    /**
     * 
     * @param codeCustormer
     * @param start
     * @param end
     * @return
     *     returns java.util.List<service.Order1>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListOrderbyCustormer", targetNamespace = "http://service/", className = "service.GetListOrderbyCustormer")
    @ResponseWrapper(localName = "getListOrderbyCustormerResponse", targetNamespace = "http://service/", className = "service.GetListOrderbyCustormerResponse")
    @Action(input = "http://service/OrderWebService/getListOrderbyCustormerRequest", output = "http://service/OrderWebService/getListOrderbyCustormerResponse")
    public List<Order1> getListOrderbyCustormer(
        @WebParam(name = "codeCustormer", targetNamespace = "")
        int codeCustormer,
        @WebParam(name = "start", targetNamespace = "")
        String start,
        @WebParam(name = "end", targetNamespace = "")
        String end);

    /**
     * 
     * @param start
     * @param end
     * @param codeUser
     * @return
     *     returns java.util.List<service.Order1>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListOrderbyUser", targetNamespace = "http://service/", className = "service.GetListOrderbyUser")
    @ResponseWrapper(localName = "getListOrderbyUserResponse", targetNamespace = "http://service/", className = "service.GetListOrderbyUserResponse")
    @Action(input = "http://service/OrderWebService/getListOrderbyUserRequest", output = "http://service/OrderWebService/getListOrderbyUserResponse")
    public List<Order1> getListOrderbyUser(
        @WebParam(name = "codeUser", targetNamespace = "")
        int codeUser,
        @WebParam(name = "start", targetNamespace = "")
        String start,
        @WebParam(name = "end", targetNamespace = "")
        String end);

    /**
     * 
     * @param order1
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://service/", className = "service.Edit")
    @Action(input = "http://service/OrderWebService/edit")
    public void edit(
        @WebParam(name = "order1", targetNamespace = "")
        Order1 order1);

    /**
     * 
     * @param moneyOrder
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calutorFee", targetNamespace = "http://service/", className = "service.CalutorFee")
    @ResponseWrapper(localName = "calutorFeeResponse", targetNamespace = "http://service/", className = "service.CalutorFeeResponse")
    @Action(input = "http://service/OrderWebService/calutorFeeRequest", output = "http://service/OrderWebService/calutorFeeResponse")
    public int calutorFee(
        @WebParam(name = "moneyOrder", targetNamespace = "")
        int moneyOrder);

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<service.Order1>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://service/", className = "service.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://service/", className = "service.FindRangeResponse")
    @Action(input = "http://service/OrderWebService/findRangeRequest", output = "http://service/OrderWebService/findRangeResponse")
    public List<Order1> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

}
